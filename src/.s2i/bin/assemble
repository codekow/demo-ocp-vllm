#!/bin/sh
set -e

usage(){
  "${STI_SCRIPTS_PATH}/usage"
}

custom_assemble(){
  pip install --no-cache-dir -U pip && \
  pip install --no-cache-dir \
    -r requirements.txt

  git clone -b rls-v3.5 https://github.com/oneapi-src/oneDNN.git oneDNN

  cmake -B ./oneDNN/build -S ./oneDNN -G Ninja -DONEDNN_LIBRARY_TYPE=STATIC \
    -DONEDNN_BUILD_DOC=OFF \
    -DONEDNN_BUILD_EXAMPLES=OFF \
    -DONEDNN_BUILD_TESTS=OFF \
    -DONEDNN_BUILD_GRAPH=OFF \
    -DONEDNN_ENABLE_WORKLOAD=INFERENCE \
    -DONEDNN_ENABLE_PRIMITIVE=MATMUL && \
    cmake --build ./oneDNN/build --target install --config Release

    rm oneDNN -rf
}

debug(){
  echo "
    This process is runing as $(id)
    Path: $(pwd)
  "
}

download_dataset(){
  echo "
    Embed an artifact inside your container for edge / disconnected use...

    Example: curl https://bulk.openweathermap.org/snapshot/{BULK_FILE_NAME}?appid={API key} > /data/weather.csv
  "
}

restore_artifacts(){
  # restore artifacts from a previous build (if they exist)

  if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
    echo "---> Restoring build artifacts..."
    mv /tmp/artifacts/* /opt/app-root/etc
  fi
}

assemble_s2i_override(){
  # handle other dependencies here
  debug
  download_dataset
  custom_assemble && exit 0
}

assemble_s2i_default(){
  echo "Resume default assemble"
  /usr/libexec/s2i/assemble
}

# usage
assemble_s2i_override
# restore_artifacts
assemble_s2i_default
